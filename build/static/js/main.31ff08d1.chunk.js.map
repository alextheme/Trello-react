{"version":3,"sources":["pages/Board/components/Board/Board.tsx","pages/Board/components/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Example","useState","count","setCount","useEffect","document","title","onClick","Board","props","state","boards","id","this","console","log","listBoards","map","board","className","data-id","href","concat","React","Component","Home","BoardID","useParams","App","to","activeClassName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6TAKA,SAASA,IAAwB,IAAD,EACJC,mBAAS,GADL,mBACvBC,EADuB,KAChBC,EADgB,KAS9B,OALAC,qBAAU,WAERC,SAASC,MAAT,kBAAoC,GAARJ,EAA5B,WAIA,gCACE,6CAAgBA,EAAhB,YACA,wBAAQK,QAAS,kBAAYJ,EAASD,EAAQ,IAA9C,wBACA,sCAAOA,EAAP,cAAkBC,Q,IAgBHK,E,kDACnB,WAAYC,GAAmB,IAAD,8BAC5B,cAAMA,IACDC,MAAQ,CACXJ,MAAO,oDACPK,OAAQ,CACN,CAAEC,GAAI,EAAGN,MAAO,8CAChB,CAAEM,GAAI,EAAGN,MAAO,kHAChB,CAAEM,GAAI,EAAGN,MAAO,kKAChB,CAAEM,GAAI,EAAGN,MAAO,sKARQ,E,0CAa9B,WAAuB,IACbM,EAAOC,KAAKJ,MAAZG,GAERE,QAAQC,WAAWH,GACnBE,QAAQC,IAAIF,KAAKJ,OAJG,MAKMI,KAAKH,MAAvBJ,EALY,EAKZA,MACFU,EANc,EAKLL,OAEZM,KAAI,SAACC,GAAD,OACH,oBAAmBC,UAAS,yBAAoBD,EAAMN,IAAMQ,UAASF,EAAMN,GAA3E,SACE,mBAAGS,KAAI,gBAAWT,GAAlB,SACE,8BAAMM,EAAMZ,WAFPY,EAAMN,OAMhBU,OAAO,CACN,oBAAIH,UAAU,sBAAd,SACE,mCACE,qCADF,uFADsC,OAKxC,cAACnB,EAAD,MAEJ,OACE,sBAAKmB,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,SAA8Bb,IAC9B,qBAAKa,UAAU,iBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,oBAAIA,UAAU,cAAd,SAA6BH,e,GAzCNO,IAAMC,WC9BpBC,E,4JACnB,WACE,OAAO,cAAC,EAAD,Q,GAFuBF,IAAMC,WCExC,SAASE,IAAwB,IACvBd,EAAmCe,cAAnCf,GACR,OAAO,cAAC,EAAD,CAAOA,GAAIA,IAGL,SAASgB,IACtB,OACE,cAAC,IAAD,UACE,gCACE,8BACE,qBAAIhB,GAAG,WAAP,UACE,6BACE,cAAC,IAAD,CAASiB,GAAG,IAAIC,gBAAgB,kBAAhC,SACE,sBAAMX,UAAU,sBAGpB,6BACE,cAAC,IAAD,CAASU,GAAG,SAAZ,0BAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,OAAZ,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACE,cAAC,EAAD,cC/BZ,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAS1BZ,M","file":"static/js/main.31ff08d1.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport './board.scss';\n\n//\nfunction Example(): JSX.Element {\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Clicked ${count * 10} ...`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={(): void => setCount(count + 1)}>Click w me</button>\n      <p>{`${count} | ${setCount}`}</p>\n    </div>\n  );\n}\n\n// +++++++++++++++++++++++++++++++++++++++++++++++\ninterface TypeState {\n  title: string;\n  boards: { id: number; title: string }[];\n}\n\n// todo: нужно будет пересмотреть этот тип\ntype TypeProps = {\n  id?: string | undefined;\n};\n\nexport default class Board extends React.Component<TypeProps, TypeState> {\n  constructor(props: TypeProps) {\n    super(props);\n    this.state = {\n      title: 'Мои доски',\n      boards: [\n        { id: 1, title: 'покупки' },\n        { id: 2, title: 'подготовка к свадьбе' },\n        { id: 3, title: 'разработка интернет-магазина' },\n        { id: 4, title: 'курс по продвижению в соцсетях' },\n      ],\n    };\n  }\n\n  render(): JSX.Element {\n    const { id } = this.props;\n    // const { board_id } = this.props.match.params;\n    console.log(typeof id);\n    console.log(this.props);\n    const { title, boards } = this.state;\n    const listBoards = boards\n      .map((board) => (\n        <li key={board.id} className={`board board-id-${board.id}`} data-id={board.id}>\n          <a href={`board/${id}`}>\n            <div>{board.title}</div>\n          </a>\n        </li>\n      ))\n      .concat([\n        <li className=\"board board-add-btn\" key=\"btn\">\n          <button>\n            <span>+</span> Добавить доску\n          </button>\n        </li>,\n        <Example />,\n      ]);\n    return (\n      <div className=\"boards\">\n        <h1 className=\"boards-title\">{title}</h1>\n        <div className=\"boards-wrapper\">\n          <div className=\"boards-container\">\n            <ul className=\"boards-list\">{listBoards}</ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Board from '../Board/Board';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Home extends React.Component {\n  render(): JSX.Element {\n    return <Board />;\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route, NavLink, useParams } from 'react-router-dom';\nimport Board from './pages/Board/components/Board/Board';\nimport Home from './pages/Board/components/Home/Home';\n\nfunction BoardID(): JSX.Element {\n  const { id }: { id: string | undefined } = useParams();\n  return <Board id={id} />;\n}\n\nexport default function App(): JSX.Element {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul id=\"main-nav\">\n            <li>\n              <NavLink to=\"/\" activeClassName=\"home-page albor\">\n                <span className=\"home-page-img\" />\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/board\">Board</NavLink>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/:id\">\n            <BoardID />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// const greetingElement = React.createElement('div', { className: 'greeting' }, 'Hello, Berdichev!');\n// ReactDOM.render(greetingElement, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}